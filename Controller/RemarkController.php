<?php
App::uses('AppController', 'Controller');
/**
 * Remarks Controller
 * Generated by Petit Four the online baking tool for CakePHP: http://patisserie.keensoftware.com
 * @property Remark $Remark
 */
class RemarkController extends AppController {

/**
 * index method
 *
 * @return void
 */
	public function index() {
		$this->Remark->recursive = 0;
		$this->set('remarks', $this->paginate());
	}

/**
 * view method
 *
 * @throws NotFoundException
 * @param int id
 * @return void
 */
	public function view($id = null) {
		if (!$this->Remark->exists($id)) {
			throw new NotFoundException(__('Invalid remark'));
		}
		$options = array('conditions' => array('Remark.' . $this->Remark->primaryKey => $id));
		$this->set('remark', $this->Remark->find('first', $options));
	}

/**
 * add method
 *
 * @return void
 */
	public function add() {
		if ($this->request->is('post')) {
			$this->Remark->create();
			if ($this->Remark->save($this->request->data)) {
				$this->Session->setFlash(__('The remark has been saved'));
				return $this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The remark could not be saved. Please, try again.'));
			}
		}
	}

/**
 * edit method
 *
 * @throws NotFoundException
 * @param int id
 * @return void
 */
	public function edit($id = null) {
		if (!$this->Remark->exists($id)) {
			throw new NotFoundException(__('Invalid remark'));
		}
		if ($this->request->is('post') || $this->request->is('put')) {
			if ($this->Remark->save($this->request->data)) {
				$this->Session->setFlash(__('The remark has been saved'));
				return $this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The remark could not be saved. Please, try again.'));
			}
		} else {
			$options = array('conditions' => array('Remark.' . $this->Remark->primaryKey => $id));
			$this->request->data = $this->Remark->find('first', $options);
		}
	}
    
    public function ajaxEdit($id = null) {
        $this->layout = "modal";
        $this->set('modalHeader','עדכון הערה'); 
        if (!$this->Remark->exists($id)) {
            throw new NotFoundException(__('Invalid remark'));
        }
        if ($this->request->is('post') || $this->request->is('put')) {
            if ($this->Remark->save($this->request->data)) {
                $this->Session->setFlash(__('The remark has been saved'));
                return $this->redirect(array('action' => 'index'));
            } else {
                $this->Session->setFlash(__('The remark could not be saved. Please, try again.'));
            }
        } else {
            $options = array('conditions' => array('Remark.' . $this->Remark->primaryKey => $id));
            $this->request->data = $this->Remark->find('first', $options);
        }
    }    

    
    public function ajaxAdd() {
        $this->layout = "modal";
        $this->set('modalHeader','הוספת הערה'); 
        // date fix
        $adate = DateTime::createFromFormat('d/m/Y', $this->request->data['params'][0]['value']);
        $output = $adate->format('Y-m-d');
        
        $this->request->data['Remark']['date'] = $output;
        $this->request->data['Remark']['description'] =  $this->request->data['params'][1]['value'];
        $this->request->data['Remark']['entity_type'] = $this->request->data['params'][2]['value'];
        $this->request->data['Remark']['entity_id'] = $this->request->data['params'][3]['value'];
        
        //print_r($this->request->data['params']); die();
        
        
         if ($this->request->is('post')) {
            $this->Remark->create();
            if ($this->Remark->save($this->request->data)) {
                $this->Session->setFlash(__('The remark has been saved'));
                echo "done"; die();
            } else {
                $this->Session->setFlash(__('The remark could not be saved. Please, try again.'));
            }
        }
    }
    
    
    
    
/**
 * delete method
 *
 * @throws NotFoundException
 * @throws MethodNotAllowedException
 * @param int id
 * @return void
 */
	public function delete($id = null) {
		$this->Remark->id = $id;
		if (!$this->Remark->exists()) {
			throw new NotFoundException(__('Invalid remark'));
		}
		$this->request->onlyAllow('post', 'delete');
		if ($this->Remark->delete()) {
			$this->Session->setFlash(__('The remark has been deleted.'));
		} else {
			$this->Session->setFlash(__('The remark could not be deleted. Please, try again.'));
		}
		return $this->redirect(array('action' => 'index'));
	}
}
