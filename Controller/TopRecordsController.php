<?php
App::uses('AppController', 'Controller');
/**
 * TopRecords Controller
 * Generated by Petit Four the online baking tool for CakePHP: http://patisserie.keensoftware.com
 * @property TopRecord $TopRecord
 */
class TopRecordsController extends AppController {

/**
 * index method
 *
 * @return void
 */
	public function index() {
		$this->TopRecord->recursive = 0;
		$this->set('topRecords', $this->paginate());
	}

/**
 * view method
 *
 * @throws NotFoundException
 * @param int id
 * @return void
 */
	public function view($id = null) {
		if (!$this->TopRecord->exists($id)) {
			throw new NotFoundException(__('Invalid top record'));
		}
		$options = array('conditions' => array('TopRecord.' . $this->TopRecord->primaryKey => $id));
		$this->set('topRecord', $this->TopRecord->find('first', $options));
	}

/**
 * add method
 *
 * @return void
 */
	public function add() {
		if ($this->request->is('post')) {
			$this->TopRecord->create();
			if ($this->TopRecord->save($this->request->data)) {
				$this->Session->setFlash(__('The top record has been saved'));
				return $this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The top record could not be saved. Please, try again.'));
			}
		}
		$professions = $this->TopRecord->Profession->find('list');
		$this->set(compact('professions'));
	}

/**
 * edit method
 *
 * @throws NotFoundException
 * @param int id
 * @return void
 */
	public function edit($id = null) {
		if (!$this->TopRecord->exists($id)) {
			throw new NotFoundException(__('Invalid top record'));
		}
		if ($this->request->is('post') || $this->request->is('put')) {
			if ($this->TopRecord->save($this->request->data)) {
				$this->Session->setFlash(__('The top record has been saved'));
				return $this->redirect(array('action' => 'index'));
			} else {
				$this->Session->setFlash(__('The top record could not be saved. Please, try again.'));
			}
		} else {
			$options = array('conditions' => array('TopRecord.' . $this->TopRecord->primaryKey => $id));
			$this->request->data = $this->TopRecord->find('first', $options);
		}
		$professions = $this->TopRecord->Profession->find('list');
		$this->set(compact('professions'));
	}

/**
 * delete method
 *
 * @throws NotFoundException
 * @throws MethodNotAllowedException
 * @param int id
 * @return void
 */
	public function delete($id = null) {
		$this->TopRecord->id = $id;
		if (!$this->TopRecord->exists()) {
			throw new NotFoundException(__('Invalid top record'));
		}
		$this->request->onlyAllow('post', 'delete');
		if ($this->TopRecord->delete()) {
			$this->Session->setFlash(__('The top record has been deleted.'));
		} else {
			$this->Session->setFlash(__('The top record could not be deleted. Please, try again.'));
		}
		return $this->redirect(array('action' => 'index'));
	}
}
